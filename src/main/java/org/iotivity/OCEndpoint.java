/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.iotivity;

public class OCEndpoint {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected OCEndpoint(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OCEndpoint obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OCEndpointUtilJNI.delete_OCEndpoint(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setAddr(DevAddr value) {
    OCEndpointUtilJNI.OCEndpoint_addr_set(swigCPtr, this, DevAddr.getCPtr(value), value);
  }

  public DevAddr getAddr() {
    long cPtr = OCEndpointUtilJNI.OCEndpoint_addr_get(swigCPtr, this);
    return (cPtr == 0) ? null : new DevAddr(cPtr, false);
  }

  public void setAddrLocal(DevAddr value) {
    OCEndpointUtilJNI.OCEndpoint_addrLocal_set(swigCPtr, this, DevAddr.getCPtr(value), value);
  }

  public DevAddr getAddrLocal() {
    long cPtr = OCEndpointUtilJNI.OCEndpoint_addrLocal_get(swigCPtr, this);
    return (cPtr == 0) ? null : new DevAddr(cPtr, false);
  }

  public void setNext(OCEndpoint value) {
    OCEndpointUtilJNI.OCEndpoint_next_set(swigCPtr, this, OCEndpoint.getCPtr(value), value);
  }

  public OCEndpoint getNext() {
    long cPtr = OCEndpointUtilJNI.OCEndpoint_next_get(swigCPtr, this);
    return (cPtr == 0) ? null : new OCEndpoint(cPtr, false);
  }

  public void setDevice(long value) {
    OCEndpointUtilJNI.OCEndpoint_device_set(swigCPtr, this, value);
  }

  public long getDevice() {
    return OCEndpointUtilJNI.OCEndpoint_device_get(swigCPtr, this);
  }

  public void setFlags(int value) {
    OCEndpointUtilJNI.OCEndpoint_flags_set(swigCPtr, this, value);
  }

  public int getFlags() { return OCEndpointUtilJNI.OCEndpoint_flags_get(swigCPtr, this); }

  public OCUuid getDi() {
    long cPtr = OCEndpointUtilJNI.OCEndpoint_di_get(swigCPtr, this);
    return (cPtr == 0) ? null : new OCUuid(cPtr, false);
  }

  public void setInterfaceIndex(int value) {
    OCEndpointUtilJNI.OCEndpoint_interfaceIndex_set(swigCPtr, this, value);
  }

  public int getInterfaceIndex() {
    return OCEndpointUtilJNI.OCEndpoint_interfaceIndex_get(swigCPtr, this);
  }

  public void setPriority(short value) {
    OCEndpointUtilJNI.OCEndpoint_priority_set(swigCPtr, this, value);
  }

  public short getPriority() {
    return OCEndpointUtilJNI.OCEndpoint_priority_get(swigCPtr, this);
  }

  public void setVersion(OCFVersion value) {
    OCEndpointUtilJNI.OCEndpoint_version_set(swigCPtr, this, value.swigValue());
  }

  public OCFVersion getVersion() {
    return OCFVersion.swigToEnum(OCEndpointUtilJNI.OCEndpoint_version_get(swigCPtr, this));
  }

  public OCEndpoint() {
    this(OCEndpointUtilJNI.new_OCEndpoint__SWIG_0(), true);
  }

  public OCEndpoint(String endpoint_str) throws OCEndpointParseException {
    this(OCEndpointUtilJNI.new_OCEndpoint__SWIG_1(endpoint_str), true);
  }

  public void setDi(OCUuid di) {
    OCEndpointUtilJNI.OCEndpoint_setDi(swigCPtr, this, OCUuid.getCPtr(di), di);
  }

  public String toString() {
    return OCEndpointUtilJNI.OCEndpoint_toString(swigCPtr, this);
  }

  public boolean isIPv6LinkLocal() {
    return OCEndpointUtilJNI.OCEndpoint_isIPv6LinkLocal(swigCPtr, this);
  }

  public boolean compare(OCEndpoint ep2) {
    return OCEndpointUtilJNI.OCEndpoint_compare(swigCPtr, this, OCEndpoint.getCPtr(ep2), ep2);
  }

  public boolean compareAddress(OCEndpoint ep2) {
    return OCEndpointUtilJNI.OCEndpoint_compareAddress(swigCPtr, this, OCEndpoint.getCPtr(ep2), ep2);
  }

  public void setLocalAddress(int interfaceIndex) {
    OCEndpointUtilJNI.OCEndpoint_setLocalAddress(swigCPtr, this, interfaceIndex);
  }

  public OCEndpoint copy() {
    long cPtr = OCEndpointUtilJNI.OCEndpoint_copy(swigCPtr, this);
    return (cPtr == 0) ? null : new OCEndpoint(cPtr, true);
  }

}
