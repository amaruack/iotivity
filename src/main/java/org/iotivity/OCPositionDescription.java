/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.iotivity;

public enum OCPositionDescription {
  UNKNOWN(1),
  TOP,
  BOTTOM,
  LEFT,
  RIGHT,
  CENTRE,
  TOPLEFT,
  BOTTOMLEFT,
  CENTRELEFT,
  CENTRERIGHT,
  BOTTOMRIGHT,
  TOPRIGHT,
  TOPCENTRE,
  BOTTOMCENTRE;

  public final int swigValue() {
    return swigValue;
  }

  public static OCPositionDescription swigToEnum(int swigValue) {
    OCPositionDescription[] swigValues = OCPositionDescription.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (OCPositionDescription swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + OCPositionDescription.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private OCPositionDescription() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private OCPositionDescription(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private OCPositionDescription(OCPositionDescription swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

