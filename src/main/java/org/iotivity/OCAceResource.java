/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.iotivity;

public class OCAceResource {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected OCAceResource(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OCAceResource obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
  }

  public void setNext(OCAceResource value) {
    OCObtJNI.OCAceResource_next_set(swigCPtr, this, OCAceResource.getCPtr(value), value);
  }

  public OCAceResource getNext() {
    long cPtr = OCObtJNI.OCAceResource_next_get(swigCPtr, this);
    return (cPtr == 0) ? null : new OCAceResource(cPtr, false);
  }

  public void setHref(String value) {
    OCObtJNI.OCAceResource_href_set(swigCPtr, this, value);
  }

  public String getHref() {
    return OCObtJNI.OCAceResource_href_get(swigCPtr, this);
  }

  public void setInterfaces(int value) {
    OCObtJNI.OCAceResource_interfaces_set(swigCPtr, this, value);
  }

  public int getInterfaces() { return OCObtJNI.OCAceResource_interfaces_get(swigCPtr, this); }

  public void setTypes(String[] value) {
    OCObtJNI.OCAceResource_types_set(swigCPtr, this, value);
  }

  public String[] getTypes() {
    return OCObtJNI.OCAceResource_types_get(swigCPtr, this);
}

  public void setWildcard(OCAceWildcard value) {
    OCObtJNI.OCAceResource_wildcard_set(swigCPtr, this, value.swigValue());
  }

  public OCAceWildcard getWildcard() {
    return OCAceWildcard.swigToEnum(OCObtJNI.OCAceResource_wildcard_get(swigCPtr, this));
  }

}
