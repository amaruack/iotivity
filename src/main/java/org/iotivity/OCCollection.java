/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.iotivity;

public class OCCollection {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected OCCollection(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OCCollection obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OCCollectionUtilJNI.delete_OCCollection(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setRes(OCResource value) {
    OCCollectionUtilJNI.OCCollection_res_set(swigCPtr, this, OCResource.getCPtr(value), value);
  }

  public OCResource getRes() {
    long cPtr = OCCollectionUtilJNI.OCCollection_res_get(swigCPtr, this);
    return (cPtr == 0) ? null : new OCResource(cPtr, false);
  }

  public OCResourceType getMandatoryResourceTypesListHead() {
    long cPtr = OCCollectionUtilJNI.OCCollection_getMandatoryResourceTypesListHead(swigCPtr, this);
    return (cPtr == 0) ? null : new OCResourceType(cPtr, false);
  }

  public OCResourceType getSupportedResourceTypesListHead() {
    long cPtr = OCCollectionUtilJNI.OCCollection_getSupportedResourceTypesListHead(swigCPtr, this);
    return (cPtr == 0) ? null : new OCResourceType(cPtr, false);
  }

  public OCLink getLinksListHead() {
    long cPtr = OCCollectionUtilJNI.OCCollection_getLinksListHead(swigCPtr, this);
    return (cPtr == 0) ? null : new OCLink(cPtr, false);
  }

}
