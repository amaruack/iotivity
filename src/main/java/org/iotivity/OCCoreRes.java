/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.iotivity;

public class OCCoreRes {
  public static OCPlatformInfo initPlatform(String mfg_name) {
    long cPtr = OCCoreResJNI.initPlatform__SWIG_0(mfg_name);
    return (cPtr == 0) ? null : new OCPlatformInfo(cPtr, false);
  }

  public static OCPlatformInfo initPlatform(String mfg_name, OCCoreInitPlatformHandler init_cb) {
    long cPtr = OCCoreResJNI.initPlatform__SWIG_1(mfg_name, init_cb);
    return (cPtr == 0) ? null : new OCPlatformInfo(cPtr, false);
  }

  public static OCDeviceInfo OCCoreAddNewDevice(String uri, String rt, String name, String spec_version, String data_model_version) {
    long cPtr = OCCoreResJNI.OCCoreAddNewDevice__SWIG_0(uri, rt, name, spec_version, data_model_version);
    return (cPtr == 0) ? null : new OCDeviceInfo(cPtr, false);
  }

  public static OCDeviceInfo OCCoreAddNewDevice(String uri, String rt, String name, String spec_version, String data_model_version, OCCoreAddDeviceHandler add_device_cb) {
    long cPtr = OCCoreResJNI.OCCoreAddNewDevice__SWIG_1(uri, rt, name, spec_version, data_model_version, add_device_cb);
    return (cPtr == 0) ? null : new OCDeviceInfo(cPtr, false);
  }

  public static void init() {
    OCCoreResJNI.init();
  }

  public static void shutdown() {
    OCCoreResJNI.shutdown();
  }

  public static long getNumDevices() {
    return OCCoreResJNI.getNumDevices();
  }

  public static OCUuid getDeviceId(long device) {
    long cPtr = OCCoreResJNI.getDeviceId(device);
    return (cPtr == 0) ? null : new OCUuid(cPtr, false);
  }

  public static OCDeviceInfo getDeviceInfo(long device) {
    long cPtr = OCCoreResJNI.getDeviceInfo(device);
    return (cPtr == 0) ? null : new OCDeviceInfo(cPtr, false);
  }

  public static OCPlatformInfo getPlatformInfo() {
    long cPtr = OCCoreResJNI.getPlatformInfo();
    return (cPtr == 0) ? null : new OCPlatformInfo(cPtr, false);
  }

  public static void encodeInterfacesMask(CborEncoder parent, int iface_mask) {
    OCCoreResJNI.encodeInterfacesMask(CborEncoder.getCPtr(parent), parent, iface_mask);
  }

  public static OCResource getResourceByIndex(int type, long device) {
    long cPtr = OCCoreResJNI.getResourceByIndex(type, device);
    return (cPtr == 0) ? null : new OCResource(cPtr, false);
  }

  public static OCResource getResourceByUri(String uri, long device) {
    long cPtr = OCCoreResJNI.getResourceByUri(uri, device);
    return (cPtr == 0) ? null : new OCResource(cPtr, false);
  }

  public static boolean filterResourceByRt(OCResource resource, OCRequest request) {
    return OCCoreResJNI.filterResourceByRt(OCResource.getCPtr(resource), resource, OCRequest.getCPtr(request), request);
  }

  public static boolean isDCR(OCResource resource, long device) {
    return OCCoreResJNI.isDCR(OCResource.getCPtr(resource), resource, device);
  }

  public static boolean oc_core_is_SVR(OCResource resource, long device) {
    return OCCoreResJNI.oc_core_is_SVR(OCResource.getCPtr(resource), resource, device);
  }

  public static boolean oc_core_is_vertical_resource(OCResource resource, long device) {
    return OCCoreResJNI.oc_core_is_vertical_resource(OCResource.getCPtr(resource), resource, device);
  }

  public static void oc_core_set_latency(int latency) {
    OCCoreResJNI.oc_core_set_latency(latency);
  }

  public static int oc_core_get_latency() {
    return OCCoreResJNI.oc_core_get_latency();
  }

}
